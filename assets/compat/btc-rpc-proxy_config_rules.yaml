- rule: '''users.*.name = "specter"'
  description: 'Must have an RPC user named "specter"'
  suggestions:
    - PUSH:
        to: "users"
        value:
          name: specter
          allowed-calls: []
          fetch-blocks: false
    - SET:
        var: 'users.[first(item => ''item.name = "specter")].password'
        to-entropy:
          charset: "a-z,A-Z,0-9"
          len: 22
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getindexinfo"'
  description: 'RPC user "specter" must have "getindexinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getindexinfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getblockcount"'
  description: 'RPC user "specter" must have "getblockcount" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getblockcount"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getchaintips"'
  description: 'RPC user "specter" must have "getchaintips" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getchaintips"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getmempoolinfo"'
  description: 'RPC user "specter" must have "getmempoolinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getmempoolinfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getblockchaininfo"'
  description: 'RPC user "specter" must have "getblockchaininfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getblockchaininfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getblockhash"'
  description: 'RPC user "specter" must have "getblockhash" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getblockhash"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getblock"'
  description: 'RPC user "specter" must have "getblock" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getblock"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getmempoolentry"'
  description: 'RPC user "specter" must have "getmempoolentry" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getmempoolentry"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getrawtransaction"'
  description: 'RPC user "specter" must have "getrawtransaction" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getrawtransaction"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getrawmempool"'
  description: 'RPC user "specter" must have "getrawmempool" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getrawmempool"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "gettxout"'
  description: 'RPC user "specter" must have "gettxout" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "gettxout"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "validateaddress"'
  description: 'RPC user "specter" must have "validateaddress" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "validateaddress"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "estimatesmartfee"'
  description: 'RPC user "specter" must have "estimatesmartfee" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "estimatesmartfee"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getbestblockhash"'
  description: 'RPC user "specter" must have "getbestblockhash" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getbestblockhash"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getblockheader"'
  description: 'RPC user "specter" must have "getblockheader" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getblockheader"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getinfo"'
  description: 'RPC user "specter" must have "getinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getinfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getmempoolinfo"'
  description: 'RPC user "specter" must have "getmempoolinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getmempoolinfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getnetworkinfo"'
  description: 'RPC user "specter" must have "getnetworkinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getnetworkinfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getpeerinfo"'
  description: 'RPC user "specter" must have "getpeerinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getpeerinfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getrawtransaction"'
  description: 'RPC user "specter" must have "getrawtransaction" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getrawtransaction"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "sendrawtransaction"'
  description: 'RPC user "specter" must have "sendrawtransaction" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "sendrawtransaction"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "uptime"'
  description: 'RPC user "specter" must have "uptime" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "uptime"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "scantxoutset"'
  description: 'RPC user "specter" must have "scantxoutset" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "scantxoutset"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "listwallets"'
  description: 'RPC user "specter" must have "listwallets" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "listwallets"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getblockfilter"'
  description: 'RPC user "specter" must have "getblockfilter" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getblockfilter"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "listwalletdir"'
  description: 'RPC user "specter" must have "listwalletdir" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "listwalletdir"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "createwallet"'
  description: 'RPC user "specter" must have "createwallet" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "createwallet"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "gettxoutsetinfo"'
  description: 'RPC user "specter" must have "gettxoutsetinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "gettxoutsetinfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "importdescriptors"'
  description: 'RPC user "specter" must have "importdescriptors" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "importdescriptors"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "listlabels"'
  description: 'RPC user "specter" must have "listlabels" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "listlabels"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getwalletinfo"'
  description: 'RPC user "specter" must have "getwalletinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getwalletinfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "listtransactions"'
  description: 'RPC user "specter" must have "listtransactions" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "listtransactions"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getbalances"'
  description: 'RPC user "specter" must have "getbalances" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getbalances"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "listlockunspent"'
  description: 'RPC user "specter" must have "listlockunspent" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "listlockunspent"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getreceivedbyaddress"'
  description: 'RPC user "specter" must have "getreceivedbyaddress" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getreceivedbyaddress"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "listsinceblock"'
  description: 'RPC user "specter" must have "listsinceblock" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "listsinceblock"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "rescanblockchain"'
  description: 'RPC user "specter" must have "rescanblockchain" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "rescanblockchain"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "loadwallet"'
  description: 'RPC user "specter" must have "loadwallet" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "loadwallet"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "gettransaction"'
  description: 'RPC user "specter" must have "gettransaction" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "gettransaction"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "walletprocesspsbt"'
  description: 'RPC user "specter" must have "walletprocesspsbt" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "walletprocesspsbt"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "setlabel"'
  description: 'RPC user "specter" must have "setlabel" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "setlabel"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "walletcreatefundedpsbt"'
  description: 'RPC user "specter" must have "walletcreatefundedpsbt" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "walletcreatefundedpsbt"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "listunspent"'
  description: 'RPC user "specter" must have "listunspent" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "listunspent"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getmininginfo"'
  description: 'RPC user "specter" must have "getmininginfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getmininginfo"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "abortrescan"'
  description: 'RPC user "specter" must have "abortrescan" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "abortrescan"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "unloadwallet"'
  description: 'RPC user "specter" must have "unloadwallet" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "unloadwallet"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "combinepsbt"'
  description: 'RPC user "specter" must have "combinepsbt" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "combinepsbt"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "finalizepsbt"'
  description: 'RPC user "specter" must have "finalizepsbt" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "finalizepsbt"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "testmempoolaccept"'
  description: 'RPC user "specter" must have "testmempoolaccept" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "testmempoolaccept"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "lockunspent"'
  description: 'RPC user "specter" must have "lockunspent" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "lockunspent"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "gettxoutproof"'
  description: 'RPC user "specter" must have "gettxoutproof" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "gettxoutproof"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "converttopsbt"'
  description: 'RPC user "specter" must have "converttopsbt" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "converttopsbt"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "utxoupdatepsbt"'
  description: 'RPC user "specter" must have "utxoupdatepsbt" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "utxoupdatepsbt"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "importmulti"'
  description: 'RPC user "specter" must have "importmulti" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "importmulti"
- rule: '''users.[first(item => ''item.name = "specter")].allowed-calls.* = "getaddressesbylabel"'
  description: 'RPC user "specter" must have "getaddressesbylabel" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter")].allowed-calls'
        value: "getaddressesbylabel"
